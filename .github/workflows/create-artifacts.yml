name: Publish Image

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string

jobs:
  build-for-os:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, macos-x86, macos-aarch64]
        include:
        - build: linux
          os: ubuntu-latest
          target: x86_64-unknown-linux-gnu
        - build: macos-x86
          os: macos-latest
          target: x86_64-apple-darwin
        - build: macos-aarch64
          os: macos-latest
          target: aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ matrix.target }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
             ${{ runner.os }}-${{ matrix.target }}-cargo-release-
             ${{ runner.os }}-${{ matrix.target }}-cargo-
      - name: Install correct version of Rust
        uses: actions-rs/toolchain@v1
        with:
            profile: minimal
            target: ${{ matrix.target }}
            override: true
      - name: Configure version and MacOs
        if: matrix.os == 'macos-latest'
        run: |
          mkdir ~/bin
          curl --location https://github.com/ethankhall/crom/releases/download/v0.3.4/crom-mac.tar.gz | tar -xvz  -C ~/bin
          chmod +x ~/bin/crom
          ~/bin/crom write-version custom ${{ inputs.version }}
          brew install binutils
          echo "$(brew --prefix)/opt/binutils/bin" >> $GITHUB_PATH
          rm -rf target/
      - name: Configure version and Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          docker login docker.pkg.github.com --username ethankhall --password ${{ secrets.GITHUB_TOKEN }}
          docker run --rm -v $(pwd):/target docker.pkg.github.com/ethankhall/crom/cli:latest write-version custom ${{ inputs.version }}
          rm -rf target/
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --release --target "${{ matrix.target }}" --target-dir target/${{ matrix.target }}
      - run: |
          ls target/${{ matrix.target }}/*
          tree target
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          if-no-files-found: error
          path: |
            target/${{ matrix.target }}/release/toolup
            target/${{ matrix.target }}/release/toolup-shim

  release:
    runs-on: ubuntu-latest
    needs: build-for-os
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v3
        with:
          name: aarch64-apple-darwin
          path: artifacts/aarch64-apple-darwin
      - uses: actions/download-artifact@v3
        with:
          name: x86_64-apple-darwin
          path: artifacts/x86_64-apple-darwin
      - uses: actions/download-artifact@v3
        with:
          name: x86_64-unknown-linux-gnu
          path: artifacts/x86_64-unknown-linux-gnu
      - name: login to registry
        run: docker login docker.pkg.github.com --username ethankhall --password ${{ secrets.GITHUB_TOKEN }}
      - name: Create release
        run: |
          docker run --rm -e GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} -v $(pwd):/target docker.pkg.github.com/ethankhall/crom/cli:latest upload-artifacts custom --artifact-path=./artifacts --version ${{ inputs.version }} linux mac-x86 mac-aarch64
